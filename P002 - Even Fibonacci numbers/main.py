# ======================================================================================================================
# PROBLEM 002:
#   Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
#   first 10 terms will be:
#
#   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#   By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
#   even-valued terms.
# ======================================================================================================================
# SOLUTION:
#   4613732
# ======================================================================================================================
# NOTES:
#   There must be a more efficient way to do this, but if there is I don't know how to do it.
# ======================================================================================================================

import time

target = int(input("Sum even Fibonacci numbers not exceeding: "))

start = time.clock()

total = 0
a = 1
b = 1
current = a+b

while not current > target:
    if current % 2 == 0:
        total += current
    a = b
    b = current
    current = a+b

end = time.clock()

print(total)
print("\nThat took {:.7f} seconds.".format(end-start))